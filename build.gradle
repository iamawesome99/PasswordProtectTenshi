import proguard.gradle.ProGuardTask
import java.nio.file.Paths

buildscript{
    repositories{
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies{
        classpath 'net.sf.proguard:proguard-gradle:6.2.2'
    }

}

plugins {
    id 'java'
    id 'idea'
}

allprojects {
    plugins.withType(JavaPlugin) {
        group = 'me.zonal'
        version = '1.7.0'

        repositories {
            mavenCentral()
            mavenLocal()
            maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots' }
            maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
            maven { url = 'https://jitpack.io' }
        }
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.16.1-R0.1-SNAPSHOT"
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
    compile 'com.h2database:h2:1.4.197'
}

sourceSets {
    main {
        resources {
            srcDirs "plugin", "src/main/java"
        }
    }
}

def jarNameWithoutExtension = jar.archiveName.with { it.take(it.lastIndexOf(".")) }
def obfuscatedJarName = "${jarNameWithoutExtension}-min.jar"
def jarFileLocation = jar.archivePath.parent
def obfuscatedFilePath = Paths.get(jarFileLocation, obfuscatedJarName)

task minimize(type: ProGuardTask, dependsOn:jar) {
    configuration 'proguard.txt'
    libraryjars files(configurations.compileOnly.collect())
    injars jar
    outjars obfuscatedFilePath.toString()
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
